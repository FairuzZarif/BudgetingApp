@model IEnumerable<BudgetingApp.Models.Expense> // Ensure the model is correctly set to the Expense type

<h2>My Expenses</h2>
<div class= "container">
    <table class="table table-bordered">
        <thead class="table-light">
            <tr>
                <th>Description</th>
                <th>Amount</th>
                <th>Category</th>
                <th>Date</th>
            </tr>
        </thead>
        <tbody>
            @foreach(var item in Model)
            {
                <tr>
                    <td>@item.Description</td>
                    <td>@item.Amount $</td> <!-- Format amount as currency -->
                    <td>@item.Category</td>
                    <td>@item.Date.ToString("yyyy-MM-dd")</td> <!-- Format date to short date string -->
                </tr>
            }
)
        </tbody>
    </table>

</div>

<h2>Expenses Chart: </h2>
<div>
    <canvas style ="max-width: 500px; max-height: 500px;"id="myChart"></canvas>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script>
    const ctx = document.getElementById('myChart');
    
    fetch('/Expenses/GetChart')
    .then(response => response.json())
    .then(data => {
         new Chart(ctx, {
              type: 'pie',
              data: {
                labels: data.map(d => d.category),
                datasets: [{
                  label: 'Total Amount spent ',
                  data: data.map(d => d.total),
                }]
              },

            });

    })
</script>